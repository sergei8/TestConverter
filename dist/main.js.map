{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/header/choose-file/choose-file.component.html","webpack:///./src/app/components/header/choose-file/choose-file.component.ts","webpack:///./src/app/components/header/choose-file/input-file-reader/input-file-reader.component.html","webpack:///./src/app/components/header/choose-file/input-file-reader/input-file-reader.component.ts","webpack:///./src/app/components/header/save-test/save-test.component.css","webpack:///./src/app/components/header/save-test/save-test.component.html","webpack:///./src/app/components/header/save-test/save-test.component.ts","webpack:///./src/app/components/header/set-config/set-config.component.css","webpack:///./src/app/components/header/set-config/set-config.component.html","webpack:///./src/app/components/header/set-config/set-config.component.ts","webpack:///./src/app/components/text-table/test-item/test-item.component.css","webpack:///./src/app/components/text-table/test-item/test-item.component.html","webpack:///./src/app/components/text-table/test-item/test-item.component.ts","webpack:///./src/app/components/text-table/text-table.component.css","webpack:///./src/app/components/text-table/text-table.component.html","webpack:///./src/app/components/text-table/text-table.component.ts","webpack:///./src/app/shared/config.service.ts","webpack:///./src/app/shared/data-service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#page-grid {\\n  min-height: 100%;\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: auto;\\n      grid-template-columns: auto;\\n  -ms-grid-rows: 48px auto;\\n      grid-template-rows: 48px auto;\\n}\\n\\n/*--------- header-секція -----------------*/\\n\\n#header-grid {\\n  background-color: #3D80CC;\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 20px 140px 0 0 120px auto 40px 40px 20px;\\n      grid-template-columns: 20px 140px 0 0 120px auto 40px 40px 20px;\\n  margin-top: 5px;\\n}\\n\\n#fileName {\\n  -ms-grid-column: 2;\\n  grid-column: 2;\\n}\\n\\n.btn-success {\\n  background-color: white;\\n}\\n\\n#fileNameButton {\\n  -ms-grid-column: 3;\\n  grid-column: 3;\\n}\\n\\n#sendToConverterButton {\\n  -ms-grid-column: 5;\\n  grid-column: 5;\\n}\\n\\n#cog {\\n  -ms-grid-column: 7;\\n  grid-column: 7;\\n  /*background-color: tomato;*/\\n}\\n\\n#help {\\n  -ms-grid-column: 8;\\n  grid-column: 8;\\n}\\n\\n#cog, #help {\\n  color: #cccccc;\\n  text-align: center\\n\\n}\\n\\n/*--------- main-секція -----------------*/\\n\\n#main-grid {\\n  display: -ms-grid;\\n  display: grid;\\n  background-color: #3D80CC;\\n  -ms-grid-columns: 20px auto 20px;\\n      grid-template-columns: 20px auto 20px;\\n  -ms-grid-rows: auto 40px;\\n      grid-template-rows: auto 40px;\\n}\\n\\n#text-table {\\n  -ms-grid-row: 1;\\n      grid-row-start: 1;\\n  -ms-grid-column: 2;\\n      grid-column-start: 2;\\n  background-color: white;\\n  max-height: 100%;\\n  padding-top: 8px;\\n}\\n\\n/*--------- footer в main-секціі -----------------*/\\n\\n#table-footer {\\n  -ms-grid-row: 2;\\n      grid-row-start: 2;\\n  -ms-grid-column: 2;\\n      grid-column-start: 2;\\n  background-color: #3D80CC;\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 150px auto 300px;\\n      grid-template-columns: 150px auto 300px;\\n}\\n\\n/*--------- copyright в footer -----------------*/\\n\\n#copy {\\n  -ms-grid-column: 1;\\n      grid-column-start: 1;\\n  margin-top: 8px;\\n  color: #cccccc;\\n  /*background-color: #cccccc;*/\\n}\\n\\n/*--------- статістіка в footer -----------------*/\\n\\n#testStat {\\n  -ms-grid-column: 3;\\n      grid-column-start: 3;\\n  /*background-color: #cccccc;*/\\n}\\n\\n\"","module.exports = \"<div id='page-grid'>\\n  <div id=\\\"header-grid\\\">\\n    <div id=\\\"fileName\\\">\\n      <app-choose-file></app-choose-file>\\n    </div>\\n    <div id=\\\"sendToConverterButton\\\">\\n      <app-save-test></app-save-test>\\n    </div>\\n\\n    <div id=\\\"cog\\\" (click)=\\\"showConfig()\\\">\\n      <i class=\\\"fa fa-cog fa-2x\\\"></i>\\n    </div>\\n\\n    <div id=\\\"help\\\">\\n      <i class=\\\"fa fa-question fa-2x\\\"></i>\\n    </div>\\n\\n  </div>\\n\\n  <main id=\\\"main-grid\\\">\\n    <div id=\\\"text-table\\\">\\n      <app-text-table></app-text-table>\\n      <p  *ngIf=\\\"dataservice.loadProgressIndicator\\\">\\n        Ждите ...\\n      </p>\\n    </div>\\n\\n    <div id=\\\"table-footer\\\">\\n      <div id=\\\"copy\\\"><i class=\\\"fa fa-copyright\\\"></i> Avas-2018</div>\\n      <div id=\\\"testStat\\\"></div>\\n    </div>\\n  </main>\\n\\n</div>\\n\\n\"","import {Component, OnInit, ViewContainerRef} from '@angular/core';\nimport {ConfigService, DEFAULT_ANSWERS, DEFAULT_SEM_CHECK} from './shared/config.service';\nimport {ModalDialogService} from 'ngx-modal-dialog';\nimport {SetConfigComponent} from './components/header/set-config/set-config.component';\nimport {DataService} from './shared/data-service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(public configService: ConfigService,\n              private modalService: ModalDialogService,\n              private viewRef: ViewContainerRef,\n              public dataservice: DataService) {\n  }\n\n  /**\n   *   при инициадизации приложения проверяем есть ли в куках\n   *  конфиг. Если нет, устанавливаем по умолчанию и сохраняем\n   *  если есть - то в readConfig они установятся и станут теущими\n   */\n  ngOnInit() {\n    const configCookie = this.configService.readConfig();\n    if (configCookie === undefined) {\n      this.configService.config.answersNumber = DEFAULT_ANSWERS;\n      this.configService.config.semanticCheck = DEFAULT_SEM_CHECK;\n      this.configService.saveConfig();\n    }\n  }\n\n  /**\n   * макет диалогового окна настройки конфигурации\n   */\n  showConfig() {\n    this.modalService.openDialog(this.viewRef, {\n      title: 'Параметры конвертера',\n      childComponent: SetConfigComponent,\n      settings: {\n        headerTitleClass: 'h5 label',\n        buttonClass: 'btn btn-sm btn-outline-info'\n      },\n    });\n  }\n\n}\n","//todo сделать HELP\n//todo проверять каждый вопрос после корректировки и менять его статус\n//todo совершенствовать синтаксический анализатор\n//todo сделать внизу кнопку `наверх`\n//todo вылетает иногда при сохранениия файла\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {AngularFontAwesomeModule} from 'angular-font-awesome';\nimport {CookieService} from 'ngx-cookie-service';\nimport {ModalDialogModule} from 'ngx-modal-dialog';\nimport {TextareaAutosizeModule} from 'ngx-textarea-autosize';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {DataService} from './shared/data-service';\nimport {ConfigService} from './shared/config.service';\n\nimport {AppComponent} from './app.component';\nimport {TextTableComponent} from './components/text-table/text-table.component';\nimport {ChooseFileComponent} from './components/header/choose-file/choose-file.component';\nimport {InputFileReaderComponent} from './components/header/choose-file/input-file-reader/input-file-reader.component';\nimport {TestItemComponent} from './components/text-table/test-item/test-item.component';\nimport {SaveTestComponent} from './components/header/save-test/save-test.component';\nimport {SetConfigComponent} from './components/header/set-config/set-config.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TextTableComponent,\n    ChooseFileComponent,\n    InputFileReaderComponent,\n    TestItemComponent,\n    SaveTestComponent,\n    SetConfigComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AngularFontAwesomeModule,\n    ModalDialogModule.forRoot(),\n    TextareaAutosizeModule,\n    NgbModule\n  ],\n  schemas: [NO_ERRORS_SCHEMA],\n  providers: [DataService, ConfigService, CookieService],\n  bootstrap: [AppComponent],\n  entryComponents: [SetConfigComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<p class=\\\"text-danger align-stretch\\\">\\n  <app-input-reader></app-input-reader>\\n</p>\\n\"","import {Component, OnInit, ElementRef} from '@angular/core';\n/*\nimport {DataService} from '../../../shared/data-service';\nimport {InputFileReaderComponent} from './input-file-reader/input-file-reader.component';\n*/\n\n@Component({\n  selector: 'app-choose-file',\n  templateUrl: './choose-file.component.html'\n})\nexport class ChooseFileComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<label class=\\\"btn btn-success\\\">\\n  Word-файл &hellip;<input type=\\\"file\\\" (change)=\\\"fileSelected($event);\\\" style=\\\"display: none\\\" >\\n</label>\\n\"","import {Component} from '@angular/core';\nimport {DataService} from '../../../../shared/data-service';\nimport {ConfigService} from '../../../../shared/config.service';\nimport {async} from 'q';\n\n@Component({\n  selector: 'app-input-reader',\n  templateUrl: './input-file-reader.component.html'\n})\n\nexport class InputFileReaderComponent {\n\n  constructor(private dataservice: DataService,\n              private configService: ConfigService) {\n  }\n\n  /**\n   * при выборе файла в <input> инициирует процесс его преобразования\n   * в табличную форму согласно структуре TestItem\n   * @param $event - содержит ссылку на файловый объект\n   */\n  fileSelected($event: any): void {\n    // this.dataservice.loadProgressIndicator = true;\n    async(this.dataservice.getPlainTests($event.target.files[0]));\n    // this.dataservice.loadProgressIndicator = false;\n    this.configService.isTestLoaded = true;   //  тест загружен\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<button class=\\\"btn btn-success\\\" (click)=\\\"saveFile()\\\"> Сохранить &hellip;</button>\\n\"","import {Component} from '@angular/core';\nimport {DataService} from '../../../shared/data-service';\nimport {saveAs} from 'file-saver/FileSaver';\n\n@Component({\n  selector: 'app-save-test',\n  templateUrl: './save-test.component.html',\n  styleUrls: ['./save-test.component.css']\n})\nexport class SaveTestComponent {\n\n  constructor(private dataservice: DataService) {\n  }\n\n  /**\n   * Сохраняет отконвертированный в GIFT файл на локальный диск\n   */\n  saveFile() {\n    const test: Object = this.convertToMoodle();\n    const file = new Blob([test], {type: 'text\\plain'});\n    const testFileName = this.dataservice.fileName.split('.')[0] + '.txt';\n    saveAs(file, testFileName);\n  }\n\n  /**\n   * Конвертирует структуру `testsList` в GIFT формат\n   * @return {string} текстовая строка в GIFT-формате\n   */\n  convertToMoodle(): string {\n    let test = '';\n    this.dataservice.testsList.forEach(item => {\n      const question = `:: ${this.escapeSpesialSymbols(item.question)}`;\n      let answers = `=${this.escapeSpesialSymbols(item.answers[0])}\\n`;  //  правильный ответ - первый!\n      for (let i = 1; i < item.answers.length; i++) {\n        answers += `~${this.escapeSpesialSymbols(item.answers[i])}\\n`;\n      }\n      test += `${question}{\\n${answers}}\\n\\n\\n`;\n    });\n    return test;\n  }\n\n  /** Экранирует слешом (\\) специальные символы формата GIFT\n   *\n   * @param {string} item - анализируемая строка\n   * @return {string} - выходная строка с экранированными спецсимволами\n   */\n  private escapeSpesialSymbols(item: string): string {\n    const mask = ['\\}', '\\{', '\\~', '\\=', '\\]'];\n    // проход по всем символам маски и их экранирование в строке `item`\n    mask.forEach(symbol => {\n      const regExp = new RegExp(symbol, 'gi');\n      try {\n        // отсекаем `undefined` items\n        if (item) {\n          item = item.replace(regExp, `\\\\${symbol}`);\n        }\n      } catch (e) {\n        console.log(item);\n        alert(`Что-то пошло не так:\\n${e.message}`);\n      }\n    });\n    return item;\n  }\n\n}\n","module.exports = \"#config-params{\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 20px auto 20px auto 20px;\\n      grid-template-columns: 20px auto 20px auto 20px;\\n  grid-row-gap: 1.1em;\\n}\\n\\nlabel{\\n  -ms-grid-column: 2;\\n  grid-column: 2;\\n}\\n\\ninput{\\n  -ms-grid-column: 4;\\n  grid-column: 4;\\n}\\n\\ninput[type=\\\"number\\\"]{\\n  width: 50px;\\n}\\n\"","module.exports = \"<div id=\\\"config-params\\\">\\n  <label for=\\\"answersNumber\\\">Число ответов</label>\\n  <input  id=\\\"answersNumber\\\"   type=\\\"number\\\" [(ngModel)]=\\\"configService.config.answersNumber\\\" min=\\\"2\\\" max=\\\"10\\\">\\n  <label for=\\\"semAnalise\\\">Семантический анализ</label>\\n  <input type=\\\"checkbox\\\" id=\\\"semAnalise\\\" [(ngModel)]=\\\"configService.config.semanticCheck\\\" >\\n</div>\\n\"","import {Component, ComponentRef} from '@angular/core';\nimport {IModalDialog, IModalDialogOptions, IModalDialogButton} from 'ngx-modal-dialog';\nimport {ConfigService} from '../../../shared/config.service';\nimport {DataService} from '../../../shared/data-service';\nimport {async} from 'q';\n\n@Component({\n  selector: 'app-set-config',\n  templateUrl: './set-config.component.html',\n  styleUrls: ['./set-config.component.css']\n})\nexport class SetConfigComponent implements IModalDialog {\n  actionButtons: IModalDialogButton[];\n\n  /**\n   * определяет функционал кнопок диалогового окна настройки конфига\n   * @param {ConfigService} configService\n   * @param {DataService} dataService\n   */\n  constructor(public configService: ConfigService,\n              private dataService: DataService) {\n\n    this.actionButtons = [\n      {\n        text: 'Сохранить', onAction: () => {\n          // console.log(this.configService.isTestLoaded);\n          this.configService.saveConfig();\n          // если файл уже загружен, перегружаем его с новым конфигом\n          if (this.configService.isTestLoaded) {\n            async(this.dataService.getPlainTests(this.dataService.file));\n          }\n          return true;\n        }\n      },\n      {\n        text: 'Прервать'\n      }\n    ];\n  }\n\n  dialogInit(reference: ComponentRef<IModalDialog>, options: Partial<IModalDialogOptions<any>>) {\n    // no processing needed\n  }\n\n\n}\n","module.exports = \".test-item, .test-item-err {\\n  margin: 0 8px;\\n}\\n\\n.test-item {\\n  background-color: white;\\n}\\n\\n.test-item-err {\\n  background-color: pink;\\n}\\n\\n.test-answer, .test-question {\\n  background-color: transparent;\\n  vertical-align: top;\\n  /*font-family: Times, Geneva, sans-serif;*/\\n}\\n\\n#test-item-grid {\\n  display: -ms-inline-grid;\\n  display: inline-grid;\\n  -ms-grid-columns: 30px auto 50px;\\n      grid-template-columns: 30px auto 50px;\\n\\n}\\n\\nli, #number {\\n  color: darkgray;\\n}\\n\\n#number {\\n  padding-left: 5px;\\n  padding-top: 2px;\\n}\\n\"","module.exports = \"\\n<div [ngClass]=\\\"setItemClass(testItem.statusBad)\\\">\\n  <div id=\\\"test-item-grid\\\">\\n    <div id=\\\"number\\\">\\n      {{number}}.&nbsp;\\n    </div>\\n    <textarea autosize class=\\\"test-question\\\" [(ngModel)]=\\\"testItem.question\\\"\\n              rows=\\\"1\\\" cols=\\\"90%\\\">\\n                <!--[cols]=\\\"adjustTextSize(testItem.question.length)\\\" >-->\\n      </textarea>\\n\\n    <div id=\\\"getMessage\\\" *ngIf=\\\"testItem.statusBad\\\"\\n    ngbPopover={{testItem.statusMessage}} placement=\\\"left\\\"\\n    >\\n      <i class=\\\"fa fa-exclamation-circle fa-2x\\\"\\n         style=\\\"color: red; padding-top: 5px\\\">\\n      </i>\\n    </div>\\n  </div>\\n\\n  <ol>\\n    <li *ngFor=\\\"let _  of testItem.answers; let i = index;\\\">\\n      <textarea autosize [ngModel]=\\\"testItem.answers[i]\\\"\\n                (change)=\\\"changeAnswer($event, i);\\\"\\n                class=\\\"test-answer\\\" rows=\\\"1\\\" cols=\\\"80%\\\">\\n      </textarea>\\n    </li>\\n  </ol>\\n\\n</div>\\n\"","import {Component, Input} from '@angular/core';\nimport {TestItem} from '../../../shared/interfaces';\n\n@Component({\n  selector: 'app-test-item',\n  templateUrl: './test-item.component.html',\n  styleUrls: ['./test-item.component.css']\n})\nexport class TestItemComponent {\n  @Input() testItem: TestItem;\n  @Input() number: number;\n\n  constructor() {\n  }\n\n  /**\n   * меняет контент ответа, когда с экрана сделана корректировка\n   * @param event - параметры события `change`\n   * @param i - порядковый номер ответа\n   */\n  public changeAnswer(event: any, i: number): void {\n    this.testItem.answers[i] = event.target.value;\n  }\n\n  /**\n   * изменяет цвет фона для вопросов с statusBad = true\n   * @param {boolean} statusBad\n   * @return {string}\n   */\n  public setItemClass(statusBad: boolean): string {\n    let itemClass = 'test-item';\n    if (statusBad) {\n      itemClass = 'test-item-err';\n    }\n    return itemClass;\n  }\n\n  //todo сделать автофит под размер окна - пока не используется\n/*\n  public adjustTextSize(textLengh: number): string {\n    // console.log(textLengh);\n    // console.log(window.innerWidth);\n    return '500px';\n  }\n*/\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let item of dataservice.testsList; let i=index\\\">\\n  <app-test-item [testItem]=\\\"item\\\" [number]=\\\"i+1\\\"></app-test-item>\\n  <hr>\\n</div>\\n\\n\\n\"","import {Component} from '@angular/core';\nimport {DataService} from '../../shared/data-service';\n\n@Component({\n  selector: 'app-text-table',\n  templateUrl: './text-table.component.html',\n  styleUrls: ['./text-table.component.css']\n})\nexport class TextTableComponent {\n\n\n  constructor(public dataservice: DataService) {\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {CookieService} from 'ngx-cookie-service';\nimport {Config} from './interfaces';\n\n// import {DataService} from './data-service';\n\n@Injectable()\nexport class ConfigService {\n\n  public config: Config = {};\n  public isTestLoaded = false;     // индикатор загружен тест или нет (false)\n\n  constructor(private cookieService: CookieService) {\n  }\n\n  /**\n   * читает параметры конфигурации\n   * @return {Object} - конфигурация приложения\n   */\n  readConfig(): Object {\n    this.config.answersNumber = Number(this.cookieService.get('answersNumber'));\n    this.config.semanticCheck = (this.cookieService.get('semanticCheck') === 'true');\n    return this.config;\n  }\n\n  /**\n   * сохраняет конфигурацию в куку\n   */\n  saveConfig(): void {\n    const date = new Date();\n    date.setDate(date.getDate() + 1000);   // дату надолго\n    this.cookieService.set('answersNumber', this.config.answersNumber.toString(), date);\n    this.cookieService.set('semanticCheck', this.config.semanticCheck.toString(), date);\n    // this.dataService.getPlainTests(this.dataService.fileName);\n  }\n\n}\n\nexport const DEFAULT_ANSWERS = 4;\nexport const DEFAULT_SEM_CHECK = false;\n\n","import {Injectable} from '@angular/core';\nimport {TestItem} from './interfaces';\nimport {ConfigService} from './config.service';\n\nimport * as _ from 'underscore';\n\n@Injectable()\nexport class DataService {\n\n  public testsList: Array<TestItem>; // структура для вывода в браузер\n  public fileName: string;  // имя конвертируемого файла (=имени резудьтатного)\n  public file: File;        // сохранеям файл, если изменится конфиг и  нужна перезагрузка\n  public loadProgressIndicator = false;   // управляет показом прогресс-индикатора\n\n  constructor(private appConfig: ConfigService) {\n  }\n\n  /**\n   * Читает docx-файл, преобразует его в текстовый формат, затем в\n   * структуру для вывода в окно браузера\n   * Через эту функцию начинается процедура загрузки и обработки файла\n   * Вызывает функции: `getFile`, `mammoth.extractRawText`, `convertToArray`, `convertToTest`\n   * @return {Array<TestItem>}\n   */\n  async getPlainTests(file: File) {\n    this.file = file;\n\n    try {\n      this.loadProgressIndicator = true;\n      // console.log('@@@', this.loadProgressIndicator);\n\n      this.fileName = file.name;\n      const plainBuffer = await this.getFile(file);\n\n\n      // преобразует docx-файл в текстовый для дальнейщей его записи на диск\n      const plainText = await mammoth.extractRawText({arrayBuffer: plainBuffer})\n        .then(result => {\n          return result.value;\n        });\n      this.loadProgressIndicator = false;\n      // console.log('+++++', this.loadProgressIndicator);\n\n      const plainArray = await this.convertToArray(plainText);\n      this.testsList = await this.convertToTest(plainArray);\n\n      // если включен флаг `semanticCheck` в конфигк,то делаем семантическую проверку\n      if (this.appConfig.config.semanticCheck) {\n        await this.checkForErrors();\n      }\n\n\n    } catch (e) {\n      console.log('error somewhere in getPlainText', e.message);\n      this.loadProgressIndicator = false;\n\n    }\n\n  }\n\n  /**\n   * Читает асинхронно локальный файл и отдает его контент через промис\n   * @param {File} fileName - файловый объект\n   * @return {Promise<any>} - промис c resolve=контенту файла\n   */\n  getFile(fileName: File): Promise<File> {\n    const fileReader: FileReader = new FileReader();\n\n    return new Promise(resolve => {\n      fileReader.onloadend = () => {\n        resolve(fileReader.result);\n      };\n      fileReader.readAsArrayBuffer(fileName);\n    });\n  }\n\n  /**\n   * преобразует текстовую строку в массив по разделителю `перевод строки`\n   * @param plainText - строка\n   * @return {Promise<any>} в промисе возвращает массив с вопросами-ответами\n   */\n  convertToArray(plainText: string): Promise<string[]> {\n    return new Promise(resolve => {\n      // делаем массив\n      let textArray: Array<string> = plainText.split('\\n');\n      // преобразуем пустые строки в ''\n      textArray = _.map(textArray, (x: string): string => {\n        return x.trim().length === 0 ? '' : x;\n      });\n      // возвращаем сжатый массив\n      resolve(_.compact(textArray));\n    });\n  }\n\n  /**\n   * преобразует массив вопросов-ответов в массив руктуры TestItem\n   * распределяет ответы согласно параметра в appConfig.answersNumber\n   * @param plainArray - линейный массив вопросов-ответов\n   * @return {Promise<any>} через промис возвращает структурированный тест\n   */\n  convertToTest(plainArray: string[]): Promise<TestItem[]> {\n    return new Promise(resolve => {\n      const test = [];\n\n      // проход по линейному массиву\n      for (let i = 0; i < plainArray.length; i += this.appConfig.config.answersNumber + 1) {\n        // инициализируем структуру\n        const item: TestItem = {\n          question: '',\n          answers: []\n        };\n        // выборка вопроса\n        item.question = plainArray[i];\n        // выборка ответов\n        for (let j = 1; j <= this.appConfig.config.answersNumber; j++) {\n          item.answers.push(plainArray[i + j]);\n        }\n        // накопление в массиве\n        test.push(item);\n      }\n      resolve(test);\n    });\n  }\n\n  /**\n   * проводит семантический анализ тестов на разного рода\n   * пользовательские ошибки: нумерация ответов/вопросов, не\n   * одинаковое число ответов и т.п.\n   * Вызывает последовательно функции конкретного вида анализа  и\n   * устанавливает для каждого айтема его статус, и статусное сообщение\n   * @return {Promise<number>}\n   */\n  checkForErrors(): Promise<void> {\n    return new Promise(() => {\n      // console.log((this.testsList));\n      this.testsList.forEach((item) => {\n        checkForNumerating(item);\n        checkForAnswers(item);\n      });\n    });\n\n    /** проверка на наличие нумерации в тесте */\n    function checkForNumerating(item): void {\n      const mask = /[1-9а-яА-Яa-zA-Z][.)]/;\n      item.statusBad = false;\n      item.statusBad = item.statusBad || RegExp(mask, 'gi').test(item.question.slice(0, 5));\n      item.answers.forEach((ans: string) => {\n        item.statusBad = item.statusBad || RegExp(mask, 'gi').test(ans.slice(0, 2));\n      });\n      if (item.statusBad) {\n        item.statusMessage = 'В вопросе или ответах присутуствует ненужная нумерация.\\n' +\n          'Вы можете убрать ее здесь или в исходном файле.';\n      }\n    }\n\n    /** проверяет список ответов и, если ответ похож на вопрос - отмечает его */\n    function checkForAnswers(item): void {\n      item.answers.forEach((ans: string) => {\n        item.statusBad = item.statusBad || ans.slice(-1) === '?';\n      });\n      if (item.statusBad) {\n        item.statusMessage = 'Похоже, в список ответов попал тестовый вопрос';\n      }\n    }\n\n  }\n\n}\n\n\n\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}